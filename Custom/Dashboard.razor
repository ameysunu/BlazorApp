@page "/dashboard"
@inject IJSRuntime JSRuntime
<PageTitle>Dashboard</PageTitle>
<h1>Dashboard</h1>

@if (waitToRefresh)
{

    <div style="display: flex; justify-content: center; align-items: center;">
        <h4 style="margin-right: 8px;">Loading dashboard, please wait</h4>
        <Spinner Type="SpinnerType.Dots" Class="me-3" Color="SpinnerColor.Primary" />
    </div>
}


@code {

    string refreshToken;
    bool waitToRefresh = true;
    HomePage.UserInfo userInfo;

    [Inject]
    NavigationManager NavigationManager { get; set; }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var authToken = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            userInfo = await HomePage.GetUserInfo(authToken);

            if (userInfo != null)
            {
                Container userContainer = await CosmosOperations.ConnectToCosmosUserDB();
                await CosmosOperations.CreateUser(userContainer, userInfo.Email, userInfo.Nickname, userInfo.Picture, userInfo.Subject);

                waitToRefresh = false;
                StateHasChanged();
            }
        }
    }

}
