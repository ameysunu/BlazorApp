@page "/myspace/recommendation"

<h3>Recommendation</h3>

<br />

<div class="d-flex justify-content-between align-items-center">
    <p style="color: gray"> Last Refreshed: 21/04/2024 8:00AM</p>
    <div class="ml-auto">
        <div class="mr-3"></div>
        <button class="btn btn-primary" @onclick="() => RefreshRecommendations()">Refresh Data</button>
    </div>
</div>

@if (!string.IsNullOrEmpty(recommendation))
{
    <p>@recommendation</p>
}


@code {
    string recommendation = "";

    public async Task<String> RefreshRecommendations()
    {
        var configuration = new ConfigurationBuilder().AddJsonFile("appsettings.json", optional: false, reloadOnChange: true).Build();
        using (HttpClient client = new HttpClient())
        {
            string url = configuration["RecommendationEngineUrl"];
            string payload = $@"
        {{
           ""body"": ""Tests""
        }}";

            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, url);
            request.Content = new StringContent(payload, Encoding.UTF8, "application/json");

            HttpResponseMessage response = await client.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                recommendation = await response.Content.ReadAsStringAsync();
                return recommendation;
            } else
            {
                string recommendation = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error has occurred with status code: {response.StatusCode}");
                return recommendation;
            }
        }

        return "";
    }

}
