@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@if(IsSpacePage && isLogged){
 <div class="page">
    <div class="sidebar">
        <MySpaceMenu />
    </div>

    <main>
        <div class="top-row px-4">
           <a href="/">Home</a>
           <a href="dashboard"> Dashboard</a>
           <a href="logout"> Logout</a>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
}

<div class="page">
    <main>
        <div class="top-row px-4">
            @if (isLogged)
            {
                <a href="/">Home</a>
                <a href="dashboard"> Dashboard</a>
                <a href="logout"> Logout</a>
            }
            else
            {
                <a href="login"> Login</a>
                <a href="register"> Register</a>
            }
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    bool isLogged;
    private bool IsSpacePage => NavigationManager.Uri.Contains("/myspace", StringComparison.OrdinalIgnoreCase);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authToken = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            if (!string.IsNullOrEmpty(authToken))
            {
                if (authToken.Contains("ey"))
                {
                    Console.WriteLine("AuthToken retrieved from localStorage: " + authToken);
                    isLogged = true;
                    StateHasChanged();
                }
                else
                {
                    isLogged = false;
                    StateHasChanged();
                }
            }
            else
            {
                Console.WriteLine("AuthToken not found in localStorage.");
                isLogged = false;
            }
        }
    }
}
