@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="page">

    <style>

    .top-row a {
        text-decoration: none;
        color: #000000;
        padding: 8px 16px;
        transition: background-color 0.3s ease;
    }

    .top-row a:hover {
        background-color: #000000;
        color: #ffffff;
        text-decoration: none;
    }

</style>

    @if (IsSpacePage && isLogged)
    {
        <div class="sidebar">
            <MySpaceMenu />
        </div>

        <main>
            <div class="top-row px-4">
               <a href="/">Home</a>
               <a href="dashboard"> Dashboard</a>
               <a href="logout"> Logout</a>
            </div>
            <article class="content px-4">
                @Body
            </article>
        </main>
    }
    else
    {
        <main>
            <div class="top-row px-4">
                @if (isLogged)
                {
                    <a href="/">Home</a>
                    <a href="dashboard"> Dashboard</a>
                    <a href="logout"> Logout</a>
                }
                else
                {
                    <a href="login"> Login</a>
                    <a href="register"> Register</a>
                }
                <a href="/about" target="_blank">About</a>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    }
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    bool isLogged;
    private bool IsSpacePage => NavigationManager.Uri.Contains("/myspace", StringComparison.OrdinalIgnoreCase);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authToken = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            if (!string.IsNullOrEmpty(authToken))
            {
                if (authToken.Contains("ey"))
                {
                    Console.WriteLine("AuthToken retrieved from localStorage: " + authToken);
                    isLogged = true;
                    StateHasChanged();
                }
                else
                {
                    isLogged = false;
                    StateHasChanged();
                }
            }
            else
            {
                Console.WriteLine("AuthToken not found in localStorage.");
                isLogged = false;
            }
        }
    }
}
